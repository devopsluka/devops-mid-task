# Nginx configuration for golang-webapp.devops-mid-task.com

# Map HTTP port from client Host header to corresponding HTTPS port
# This handles redirects when using non-standard ports
# $http_host includes the port as sent by the client (e.g., "localhost:8080")
map $http_host $redirect_port {
    default         "";          # No port in redirect (use default 443)
    "~*:8080$"      ":8443";     # Development: 8080 → 8443
    "~*:80$"        "";          # Explicit port 80 → default 443
}

# Upstream backend server
upstream webapp_backend {
    server webapp:8443;
}

# HTTP server - redirect all traffic to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name golang-webapp.devops-mid-task.com localhost;

    # Log files
    access_log /var/log/nginx/http_access.log;
    error_log /var/log/nginx/http_error.log;

    # Redirect all HTTP requests to HTTPS
    # Use the mapped HTTPS port based on the client's Host header
    location / {
        # $redirect_port is mapped from $http_host (includes port if client sent non-standard port)
        return 301 https://$host$redirect_port$request_uri;
    }

    # Health check endpoint (allow HTTP for monitoring)
    location /health {
        return 301 https://$host$redirect_port$request_uri;
    }
}

# HTTPS server
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name golang-webapp.devops-mid-task.com localhost;

    # SSL Certificate Configuration
    ssl_certificate /etc/nginx/certs/server.crt;
    ssl_certificate_key /etc/nginx/certs/server.key;
    ssl_trusted_certificate /etc/nginx/certs/ca.crt;

    # SSL Protocol and Cipher Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA';
    ssl_prefer_server_ciphers on;

    # SSL Session Configuration
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;

    # OCSP Stapling
    ssl_stapling off;  # Disabled for self-signed certificates
    ssl_stapling_verify off;

    # Diffie-Hellman parameter for DHE ciphersuites
    # ssl_dhparam /etc/nginx/certs/dhparam.pem;  # Optional: generate with openssl dhparam -out dhparam.pem 2048

    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # Log files
    access_log /var/log/nginx/https_access.log;
    error_log /var/log/nginx/https_error.log;

    # Proxy settings
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Port $server_port;

    # Proxy timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    # Disable proxy buffering for real-time applications
    proxy_buffering off;

    # Root location - proxy to backend
    location / {
        # Since the backend is HTTPS, we need to use https:// and handle SSL verification
        proxy_pass https://webapp_backend;

        # SSL verification for backend
        proxy_ssl_verify off;  # Set to 'on' and configure proxy_ssl_trusted_certificate for production
        proxy_ssl_server_name on;
        proxy_ssl_protocols TLSv1.2 TLSv1.3;

        # WebSocket support (if needed)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Health check endpoint
    location /health {
        proxy_pass https://webapp_backend/health;
        proxy_ssl_verify off;
        proxy_ssl_server_name on;

        # Allow health checks to be faster
        proxy_connect_timeout 5s;
        proxy_read_timeout 5s;
    }

    # About endpoint
    location /about {
        proxy_pass https://webapp_backend/about;
        proxy_ssl_verify off;
        proxy_ssl_server_name on;
    }

    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}
